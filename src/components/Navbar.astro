---
export interface Props {
	rounded?: boolean;
}

const lokalgruppen = await Astro.glob('../pages/de/lokalgruppen/*.md*');

const { rounded = true } = Astro.props as Props;

type MenuDefinition = {
	items: MenuItem[];
};

type MenuItem = {
	title: string;
	isMega?: boolean;
	to?: string;
	items?: MenuItem[];
};

const menuItems: MenuDefinition = {
	items: [
		{
			title: 'Verein',
			to: '/de/verein/ueber-uns',
			items: [
				{
					title: 'Aktuelles',
					to: '/de/news',
				},
				{
					title: '√úber uns',
					to: '/de/verein/ueber-uns',
				},
				{
					title: 'Preise / Auszeichnungen',
					to: '/de/verein/preise',
				},
				{
					title: 'F√∂rderungsw√ºrdigkeit',
					to: '/de/verein/foerderungswuerdigkeit',
				},
				{
					title: 'Gesellschaftlicher Auftrag',
					to: '/de/verein/gesellschaftlicher-auftrag',
				},
				{
					title: 'Patner',
					to: '/de/verein/partner',
				},
				{
					title: 'ü†Ü Engagieren!',
					to: '/de/lokalgruppen/mitmachen',
				},
			],
		},
		{
			title: 'Projekte',
			to: '/de/projekte',
			items: [
				{
					title: 'Schuliche Pr√§vention',
					to: '/de/projekte/schulische-praevention',
				},
				{
					title: 'Forschung',
					to: '/de/projekte/forschung',
				},
				{
					title: 'Universit√§re Lehre',
					to: '/de/projekte/lehre',
				},
				// {
				// 	title: 'Podcast',
				// 	to: '/de/projekte/podcast',
				// },
			],
		},
		{
			title: 'Lokalgruppen',
			to: '/#lokalgruppen',
			items: lokalgruppen.map((lokalgruppe) => ({
				title: lokalgruppe.frontmatter.title,
				to: lokalgruppe.url,
			})),
		},
		{
			title: 'Wissen',
			to: '/de/wissen',
			isMega: true,
			items: [
				{
					title: 'Krankheiten',
					to: '/de/wissen/krankheiten',
					items: (await Astro.glob('../pages/de/wissen/krankheiten/*.md')).map((page) => ({
						title: page.frontmatter.title,
						to: page.url,
					})),
				},
				{
					title: 'Allgemein',
					to: '/de/wissen/allgemein',
					items: [
						{
							title: 'H√§ufige Fragen',
							to: '/de/wissen/allgemein/faq',
						},
						{
							title: 'Impfen A-Z',
							to: '/de/wissen/allgemein/impfen-a-z',
						},
						{
							title: 'Herdenschutz',
							to: '/de/wissen/allgemein/soziale-verantwortung',
						},
						{
							title: 'Impfmythen widerlegt',
							to: '/de/wissen/allgemein/impfmythen-widerlegt',
						},
						{
							title: 'Wie funktioniert eine Impfung?',
							to: '/de/wissen/allgemein/wie-funktioniert-eine-impfung',
						},
						{
							title: 'Quecksilber (Thiomersal)',
							to: '/de/wissen/allgemein/quecksilber',
						},
						{
							title: 'Aluminium',
							to: '/de/wissen/allgemein/aluminium',
						},
						{
							title: 'Quiz',
							to: '/de/wissen/allgemein/quiz',
						},
					],
				},
			],
		},
	],
};
---

<div class="w-full absolute top-0 navbar">
	<div class={'container mx-auto border-impf border-t-8 bg-white px-5 shadow-md' + (rounded ? ' lg:rounded-b-md' : '')} style="z-index: 1000;">
		<div class="flex flex-col lg:flex-row font-inter">
			<div class="grow lg:grow-0 flex justify-between">
				<a href="/" class="grow py-2 mr-6">
					<img src="/logo-quer-rgb.svg" alt="Impf Dich Logo" width="220" />
				</a>
				<button id="navbar-toggle" class="block lg:hidden rounded-lg focus:outline-none focus:shadow-outline">
					<svg fill="currentColor" viewBox="0 0 20 20" class="w-6 h-6">
						<path
							id="menuClosedCaret"
							fill-rule="evenodd"
							d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM9 15a1 1 0 011-1h6a1 1 0 110 2h-6a1 1 0 01-1-1z"
							clip-rule="evenodd"></path>
						<path
							id="menuOpenCaret"
							class="hidden"
							fill-rule="evenodd"
							d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
							clip-rule="evenodd"></path>
					</svg>
				</button>
			</div>

			<nav class="grow hidden lg:flex flex-col lg:flex-row items-center justify-between menu-toggle">
				<div class="flex flex-col lg:flex-row">
					{
						menuItems.items.map((item) => {
							if (item.items && !item.isMega && item.items.length > 0) {
								return (
									<div class="navbar-item-dropdown relative">
										<div class="navbar-item">
											<span>{item.title}</span>
											<svg fill="currentColor" viewBox="0 0 20 20" class="inline w-4 h-4 mt-1 ml-1 transition-transform duration-200 transform lg:-mt-1 text-impf">
												<path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
											</svg>
										</div>
										<div class="lg:absolute navbar-dropdown w-full origin-top-left rounded-md shadow-md lg:w-64">
											<div class="py-2 bg-white rounded-md shadow">
												{item.items.map((subitem) => (
													<a href={subitem.to} class="navbar-dropdown-item">
														{subitem.title}
													</a>
												))}
											</div>
										</div>
									</div>
								);
							} else if (item.items && item.isMega) {
								return (
									<div class="navbar-item-dropdown relative">
										<div class="navbar-item">
											<span>{item.title}</span>
											<svg fill="currentColor" viewBox="0 0 20 20" class="inline w-4 h-4 mt-1 ml-1 transition-transform duration-200 transform lg:-mt-1 text-impf">
												<path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
											</svg>
										</div>
										<div class="lg:absolute navbar-dropdown origin-top-left rounded-md shadow-md">
											<div class="flex py-2 bg-white rounded-md shadow gap-3">
												{item.items.map((subitem) => (
													<div class="grow">
														<h3 class="text-xl mb-2 ml-4 font-heading">{subitem.title}</h3>
														{subitem.items &&
															subitem.items.map((subsubitem) => (
																<a href={subsubitem.to} class="navbar-dropdown-item">
																	{subsubitem.title}
																</a>
															))}
													</div>
												))}
											</div>
										</div>
									</div>
								);
							} else if (!item.items || item.items.length == 0) {
								return (
									<a class="navbar-item" href={item.to}>
										{item.title}
									</a>
								);
							}
						})
					}
				</div>
				<div>
					<a href="/de/meta/unterstuetzen" class="rounded bg-impf hover:bg-sky-600 text-white py-2 px-4 flex gap-2 items-center cursor-pointer my-4 lg:my-0">
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6">
							<path
								d="M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z"
							></path>
						</svg>

						 Unterst√ºtzen
					</a>
				</div>
			</nav>
		</div>
	</div>
</div>

<script>
	document.addEventListener('astro:page-load', function () {
		let menuState = false;
		const toggle = document.querySelectorAll('.menu-toggle');
		const menuOpenCaret = document.querySelector('#menuOpenCaret')!;
		const menuClosedCaret = document.querySelector('#menuClosedCaret')!;

		document.querySelector('#navbar-toggle')!.addEventListener('click', toggleMenu);

		function toggleMenu() {
			menuState = !menuState;
			if (menuState) {
				menuOpenCaret.classList.remove('hidden');
				menuClosedCaret.classList.add('hidden');
				toggle.forEach((el) => {
					el.classList.remove('hidden');
				});
			} else {
				menuOpenCaret.classList.add('hidden');
				menuClosedCaret.classList.remove('hidden');
				toggle.forEach((el) => {
					el.classList.add('hidden');
				});
			}
		}
	});
</script>

<style lang="scss" is:global>
	.navbar-item {
		@apply hover:text-impf transition-colors px-6 py-5 hover:bg-gray-100 cursor-pointer;
	}

	.navbar-item-dropdown:hover svg {
		transform: rotate(180deg);
	}

	.navbar-item-dropdown:hover .navbar-dropdown,
	.navbar-dropdown:hover {
		display: block;
	}

	.navbar-dropdown {
		display: none;
		z-index: 1000;
	}

	.navbar-dropdown-item {
		@apply block px-4 py-2 text-sm bg-transparent text-gray-900 hover:text-impf  hover:bg-gray-100 focus:bg-gray-200 focus:outline-none break-keep whitespace-nowrap;
	}
</style>
