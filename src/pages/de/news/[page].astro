---
import { getCollection, type CollectionEntry } from 'astro:content';
import dayjs from 'dayjs';
import 'dayjs/locale/de';
import PageLayout from '@/layouts/Page.astro';
import { Image } from 'astro:assets';

dayjs.locale('de');

export async function getStaticPaths() {
	const allPosts = await getCollection('news');

	// Sort by publishedAt in descending order (newest first)
	allPosts.sort((a, b) => {
		const dateA = a.data.publishedAt instanceof Date ? a.data.publishedAt : new Date(String(a.data.publishedAt) || 0);
		const dateB = b.data.publishedAt instanceof Date ? b.data.publishedAt : new Date(String(b.data.publishedAt) || 0);
		return dateB.getTime() - dateA.getTime();
	});

	const POSTS_PER_PAGE = 6;
	const totalPages = Math.ceil(allPosts.length / POSTS_PER_PAGE);

	const paths = [];

	for (let i = 1; i <= totalPages; i++) {
		const startIndex = (i - 1) * POSTS_PER_PAGE;
		const endIndex = startIndex + POSTS_PER_PAGE;
		const posts = allPosts.slice(startIndex, endIndex);

		paths.push({
			params: { page: i.toString() },
			props: {
				page: {
					data: posts,
					currentPage: i,
					lastPage: totalPages,
					start: startIndex,
					end: Math.min(endIndex - 1, allPosts.length - 1),
					total: allPosts.length,
					url: {
						prev: i > 1 ? (i === 2 ? '/de/news/1' : `/de/news/${i - 1}`) : undefined,
						next: i < totalPages ? `/de/news/${i + 1}` : undefined,
					},
				},
			},
		});
	}

	return paths;
}

type Props = {
	page: {
		data: CollectionEntry<'news'>[];
		url: {
			prev?: string;
			next?: string;
		};
		currentPage: number;
		lastPage: number;
		start: number;
		end: number;
		total: number;
	};
};

const { page } = Astro.props as Props;
const posts = page.data;

// Helper function to clean up content preview
function cleanContentPreview(content: string, maxLength: number = 200): string {
	if (!content) return '';

	// Remove markdown headers and extra whitespace
	const cleaned = content
		.replace(/^(\n)?\s{0,}#{1,6}\s+| {0,}(\n)?\s{0,}#{0,} #{0,}(\n)?\s{0,}$/gm, '$1$2$3')
		.replace(/\n\s*\n/g, ' ')
		.replace(/\s+/g, ' ')
		.trim();

	if (cleaned.length <= maxLength) return cleaned;

	// Find the last complete word within the limit
	const truncated = cleaned.substring(0, maxLength);
	const lastSpace = truncated.lastIndexOf(' ');
	return truncated.substring(0, lastSpace > 0 ? lastSpace : maxLength) + '...';
}

// Generate pagination range
function getPaginationRange(current: number, total: number): (number | string)[] {
	const range: (number | string)[] = [];
	const showEllipsis = total > 7;

	if (!showEllipsis) {
		for (let i = 1; i <= total; i++) {
			range.push(i);
		}
		return range;
	}

	// Always show first page
	range.push(1);

	if (current > 3) {
		range.push('...');
	}

	// Show pages around current
	const start = Math.max(2, current - 1);
	const end = Math.min(total - 1, current + 1);

	for (let i = start; i <= end; i++) {
		if (i !== 1 && i !== total) {
			range.push(i);
		}
	}

	if (current < total - 2) {
		range.push('...');
	}

	// Always show last page if total > 1
	if (total > 1) {
		range.push(total);
	}

	return range;
}
---

<PageLayout title="Aktuelles">
	<div class="space-y-8">
		{
			posts.map((entry) => (
				<article class="bg-white rounded-xl shadow-lg hover:shadow-xl transition-shadow duration-300 overflow-hidden border border-gray-100">
					<div class="md:flex">
						{/* Image Section */}
						{entry.data.heroImage && (
							<div class="md:w-1/3 lg:w-1/4 relative">
								<a href={'/de/news/' + entry.data.slug} class="block h-full">
									<div class="aspect-video md:aspect-square lg:aspect-[4/3] overflow-hidden">
										<Image src={entry.data.heroImage} alt={entry.data.title} class="w-full h-full object-cover hover:scale-105 transition-transform duration-300" />
									</div>
								</a>
							</div>
						)}

						{/* Content Section */}
						<div class={`flex-1 p-6 ${entry.data.heroImage ? 'md:p-8' : 'md:p-8'}`}>
							{/* Date */}
							<div class="mb-3">
								<time class="text-sm font-medium text-impf bg-blue-50 px-3 py-1 rounded-full">{dayjs(entry.data.publishedAt).format('DD. MMMM YYYY')}</time>
							</div>

							{/* Title */}
							<h2 class="mb-4">
								<a href={'/de/news/' + entry.data.slug} class="font-heading text-2xl lg:text-3xl font-semibold text-gray-900 hover:text-impf transition-colors duration-200 leading-tight">
									{entry.data.title}
								</a>
							</h2>

							{/* Content Preview */}
							<p class="text-gray-600 leading-relaxed mb-6 text-base">{cleanContentPreview(entry.body || '', 250)}</p>

							{/* Read More Link */}
							<div class="flex items-center">
								<a href={'/de/news/' + entry.data.slug} class="inline-flex items-center text-impf hover:text-impfhover font-medium transition-colors duration-200 group">
									Weiterlesen
									<svg class="ml-2 w-4 h-4 transition-transform duration-200 group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
									</svg>
								</a>
							</div>
						</div>
					</div>
				</article>
			))
		}

		{/* Empty State */}
		{
			posts.length === 0 && (
				<div class="text-center py-16">
					<div class="max-w-md mx-auto">
						<div class="mb-6">
							<svg class="mx-auto h-16 w-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="1"
									d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9.5a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"
								/>
							</svg>
						</div>
						<h3 class="text-lg font-medium text-gray-900 mb-2">Keine Nachrichten verfügbar</h3>
						<p class="text-gray-500">Es sind derzeit keine Nachrichtenartikel vorhanden.</p>
					</div>
				</div>
			)
		}

		{/* Pagination */}
		{
			page.lastPage > 1 && (
				<nav class="flex items-center justify-between bg-white px-4 py-6 sm:px-6 border-t border-gray-200">
					<div class="flex flex-1 justify-between sm:hidden">
						{/* Mobile pagination */}
						{page.url.prev ? (
							<a href={page.url.prev} class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">
								Vorherige
							</a>
						) : (
							<span class="relative inline-flex items-center rounded-md border border-gray-300 bg-gray-100 px-4 py-2 text-sm font-medium text-gray-400 cursor-not-allowed">Vorherige</span>
						)}

						{page.url.next ? (
							<a href={page.url.next} class="relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">
								Nächste
							</a>
						) : (
							<span class="relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-gray-100 px-4 py-2 text-sm font-medium text-gray-400 cursor-not-allowed">Nächste</span>
						)}
					</div>

					<div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
						<div>
							<p class="text-sm text-gray-700">
								Zeige <span class="font-medium">{page.start + 1}</span> bis <span class="font-medium">{page.end + 1}</span> von <span class="font-medium">{page.total}</span> Ergebnissen
							</p>
						</div>
						<div>
							<nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
								{/* Previous button */}
								{page.url.prev ? (
									<a
										href={page.url.prev}
										class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0"
									>
										<span class="sr-only">Vorherige</span>
										<svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
											<path
												fill-rule="evenodd"
												d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z"
												clip-rule="evenodd"
											/>
										</svg>
									</a>
								) : (
									<span class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-300 ring-1 ring-inset ring-gray-300 cursor-not-allowed">
										<span class="sr-only">Vorherige</span>
										<svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
											<path
												fill-rule="evenodd"
												d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z"
												clip-rule="evenodd"
											/>
										</svg>
									</span>
								)}

								{/* Page numbers */}
								{getPaginationRange(page.currentPage, page.lastPage).map((pageNum, index) => {
									if (pageNum === '...') {
										return <span class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-700 ring-1 ring-inset ring-gray-300 focus:outline-offset-0">...</span>;
									}

									const pageNumber = pageNum as number;
									const isCurrent = pageNumber === page.currentPage;
									const pageUrl = `/de/news/${pageNumber}`;

									return (
										<a
											href={pageUrl}
											class={`relative inline-flex items-center px-4 py-2 text-sm font-semibold ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 ${
												isCurrent ? 'z-10 bg-impf text-white focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-impf' : 'text-gray-900'
											}`}
										>
											{pageNumber}
										</a>
									);
								})}

								{/* Next button */}
								{page.url.next ? (
									<a
										href={page.url.next}
										class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0"
									>
										<span class="sr-only">Nächste</span>
										<svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
											<path
												fill-rule="evenodd"
												d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
												clip-rule="evenodd"
											/>
										</svg>
									</a>
								) : (
									<span class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-300 ring-1 ring-inset ring-gray-300 cursor-not-allowed">
										<span class="sr-only">Nächste</span>
										<svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
											<path
												fill-rule="evenodd"
												d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z"
												clip-rule="evenodd"
											/>
										</svg>
									</span>
								)}
							</nav>
						</div>
					</div>
				</nav>
			)
		}
	</div>
</PageLayout>
